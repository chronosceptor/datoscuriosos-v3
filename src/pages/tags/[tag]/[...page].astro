---
import Layout from "../../../layouts/Layout.astro";
import Post from "../../../components/Post.astro";
import Paginate from "../../../components/Paginate.astro";
import config from "../../../../public/site/config.json";

export async function getStaticPaths({ paginate }) {
  const allPosts = await Astro.glob("../../../content/posts/*.mdx");

  const uniqueTags = [
    ...new Set(allPosts.map((post) => post.frontmatter.tags).flat()),
  ];

  return uniqueTags.map((tag) => {
    const filteredPosts = allPosts.filter((post) =>
      post.frontmatter.tags.includes(tag)
    );
    filteredPosts.sort(
      (a, b) => Date.parse(b.frontmatter.date) - Date.parse(a.frontmatter.date)
    );
    const nonDraftPosts = filteredPosts.filter(
      (post) => !post.frontmatter.draft
    );

    return paginate(nonDraftPosts, {
      pageSize: config.pageSize,
      params: { tag },
      props: { posts: nonDraftPosts },
    });
  });
}

const { tag } = Astro.params;
const { page } = Astro.props;
---

<Layout title={tag} | {config.siteName} image="">
  <main>
    <div class="t-container t-max-w-7xl t-py-10">
      {
        page.data.map((post) => (
          <Post
            title={post.frontmatter.title}
            slug={post.frontmatter.slug}
            date={post.frontmatter.date}
            image={post.frontmatter.image}
            tags={post.frontmatter.tags}
          />
        ))
      }
      <Paginate
        current={page.url.current}
        prev={page.url.prev}
        next={page.url.next}
      />
    </div>
  </main>
</Layout>
